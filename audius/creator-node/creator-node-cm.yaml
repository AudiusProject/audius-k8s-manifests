---
# Source: audius-creator-node/templates/backend-cm.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: creator-node-backend-cm
  namespace: default
data:
  dbUrl: "postgres://postgres:postgres@creator-node-db-svc.default.svc.cluster.local:5432/audius_creator_node"
  redisHost: "creator-node-cache-svc.default.svc.cluster.local"
  redisPort: "6379"
  ipfsHost: "creator-node-ipfs-svc.default.svc.cluster.local"
  ipfsPort: "5001"
  logLevel: "debug"
  ipfsClusterIP: "<SEE_README>"
  ipfsClusterPort: "<SEE_README>"


---
# Source: audius-creator-node/templates/db-cm.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: creator-node-db-cm
  namespace: default
data:
  POSTGRES_DB: audius_creator_node
  POSTGRES_USER: postgres


---
# Source: audius-creator-node/templates/ipfs-cm.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: creator-node-ipfs-cm
  namespace: default
data:
  ipfs-remove-lock.sh: |
    #!/bin/sh
    # when an ipfs upgrade happens, a new pod is created and must be healthy before the old pod can be terminated
    # thus, the lock mus be released from the current running pod so the new pod can start the ipfs daemon
    set -e
    set -x
    if [ -f /data/ipfs/config ]; then
      if [ -f /data/ipfs/repo.lock ]; then
        rm /data/ipfs/repo.lock
      fi
      if [ -f /data/ipfs/datastore/LOCK ]; then
        rm /data/ipfs/datastore/LOCK
      fi
      exit 0
    fi
