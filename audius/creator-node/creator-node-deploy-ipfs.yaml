---
# Source: audius-creator-node/templates/ipfs-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: creator-node-ipfs-cm
  namespace: default
data:
  ipfs-remove-lock.sh: |
    #!/bin/sh
    # when an ipfs upgrade happens, a new pod is created and must be healthy before the old pod can be terminated
    # thus, the lock mus be released from the current running pod so the new pod can start the ipfs daemon
    set -e
    set -x
    if [ -f /data/ipfs/config ]; then
      if [ -f /data/ipfs/repo.lock ]; then
        rm /data/ipfs/repo.lock
      fi
      if [ -f /data/ipfs/datastore/LOCK ]; then
        rm /data/ipfs/datastore/LOCK
      fi
    fi
    exit 0

---
# Source: audius-creator-node/templates/ipfs-deploy.yaml


apiVersion: apps/v1
kind: Deployment
metadata:
  name: creator-node-ipfs
  namespace: default
spec:
  selector:
    matchLabels:
      release: creator-node
      tier: ipfs
      
  replicas: 1
  
  template:
    metadata:
      labels:
        release: creator-node
        tier: ipfs
        
      annotations:
        checksum/config: a5009ce89593dc1ceef18b84f07a9c0a1994002ca5e6ad8500e54bd74da8bf07
    spec:
      
      
    spec:
      securityContext:
          fsGroup: 100
          runAsUser: 1000
          runAsGroup: 100
      containers:
      - name: creator-node-ipfs
        image: ipfs/go-ipfs:v0.9.1
        args: ["daemon", "--migrate=true", "--enable-gc=true"]
        livenessProbe:
          exec:
            command:
              - ipfs
              - id
          initialDelaySeconds: 3
          periodSeconds: 10
        ports:
        - name: swarm
          containerPort: 4001
        - name: api
          containerPort: 5001
        - name: http
          containerPort: 8080
        volumeMounts:
        - name: creator-node-ipfs-pv
          mountPath: /data/ipfs
          subPath: creator-node-ipfs
      restartPolicy: Always
      initContainers:
      - name: init
        image: ipfs/go-ipfs:v0.9.1
        command: ["sh", "-c", "./scripts/ipfs-remove-lock.sh"]
        volumeMounts:
        - name: creator-node-ipfs-pv
          mountPath: /data/ipfs
          subPath: creator-node-ipfs
        - name: ipfs-cm
          mountPath: /scripts/ipfs-remove-lock.sh
          subPath: ipfs-remove-lock.sh
      volumes:
      - name: creator-node-ipfs-pv
        
        persistentVolumeClaim:
          claimName: creator-node-ipfs-pvc
        
      - name: ipfs-cm
        configMap:
          name: creator-node-ipfs-cm
          defaultMode: 0755



