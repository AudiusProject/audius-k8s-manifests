---
# Source: audius-discovery-provider/templates/backend-cm.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: discovery-provider-backend-cm
  namespace: default
data:
  
  audius_db_url: "postgresql+psycopg2://postgres:postgres@discovery-provider-db-svc.default.svc.cluster.local:5432/audius_discovery"
  audius_db_url_read_replica: "postgresql+psycopg2://postgres:postgres@discovery-provider-db-svc.default.svc.cluster.local:5432/audius_discovery"
  # example of managed postgres db url
  # "postgresql://postgres:<postgres_password>@<database_ip>:5432/audius_discovery"
  
  audius_redis_url: "redis://discovery-provider-cache-svc.default.svc.cluster.local:6379/00"
  audius_contracts_registry: "0xC611C82150b56E6e4Ec5973AcAbA8835Dd0d75A2"
  audius_cors_allow_all: "true"
  audius_delegate_owner_wallet: ""
  audius_delegate_private_key: ""
  audius_discprov_blacklist_block_processing_window: "1200"
  audius_discprov_block_processing_window: "100"
  audius_discprov_env: "prod"
  audius_discprov_get_users_cnode_ttl_sec: "300"
  audius_discprov_identity_service_url: "https://identityservice.audius.co"
  audius_discprov_notifications_max_block_diff: "10"
  audius_discprov_start_block: "0xa7cac7f512e8ce7bdeeeaa636b66795ac75ac104ba7d77ef79be9e8d0d7794f3"
  audius_discprov_user_metadata_service_url: "https://usermetadata.audius.co"
  audius_eth_contracts_registry: "0xd976d3b4f4e22a238c1A736b6612D22f17b6f64C"
  audius_gunicorn_worker_class: "eventlet"
  audius_gunicorn_workers: "16"
  audius_no_workers: "true"
  audius_solana_endpoint: "https://audius.rpcpool.com/4d12c27ad978e40c1b0f8449b93c"
  audius_solana_rewards_manager_account: "71hWFVYokLaN1PNYzTAWi13EfJ7Xt9VbSWUKsXUT8mxE"
  audius_solana_rewards_manager_min_slot: "0"
  audius_solana_rewards_manager_program_address: "DDZDcYdQFEMwcu2Mwo75yGFjJ1mUQyyXLWzhZLEVFcei"
  audius_solana_signer_group_address: "FbfwE8ZmVdwUbbEXdq4ofhuUEiAxeSk5kaoYrJJekpnZ"
  audius_solana_track_listen_count_address: "7K3UpbZViPnQDLn2DAM853B9J5GBxd1L1rLHy4KqSmWG"
  audius_solana_user_bank_min_slot: "0"
  audius_solana_user_bank_program_address: "Ewkv3JahEFRKkcJmpoKB7pXbnUHwjAyXiwEo4ZY2rezQ"
  audius_solana_waudio_mint: "9LzCMqDgTKYz9Drzqnpgee3SGa89up3a247ypMj2xrqM"
  audius_web3_eth_provider_url: "https://mainnet.infura.io/v3/a3ed533ddfca4c76ab4df7556e2745e1"
  audius_web3_host: "poa-gateway.audius.co"
  audius_web3_port: "443"


---
# Source: audius-discovery-provider/templates/db-cm.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: discovery-provider-db-cm
  namespace: default
data:
  POSTGRES_DB: audius_discovery
  POSTGRES_USER: postgres


---
# Source: audius-discovery-provider/templates/ipfs-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: discovery-provider-ipfs-cm
  namespace: default
data:
  ipfs-remove-lock.sh: |
    #!/bin/sh
    # when an ipfs upgrade happens, a new pod is created and must be healthy before the old pod can be terminated
    # thus, the lock mus be released from the current running pod so the new pod can start the ipfs daemon
    set -e
    set -x
    if [ -f /data/ipfs/config ]; then
      if [ -f /data/ipfs/repo.lock ]; then
        rm /data/ipfs/repo.lock
      fi
      if [ -f /data/ipfs/datastore/LOCK ]; then
        rm /data/ipfs/datastore/LOCK
      fi
      exit 0
    fi

