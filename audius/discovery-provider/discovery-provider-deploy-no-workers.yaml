---
# Source: audius-discovery-provider/templates/backend-deploy.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery-provider-backend
  namespace: default
spec:
  selector:
    matchLabels:
      release: discovery-provider
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        release: discovery-provider
        tier: backend
      annotations:
        checksum/config: c7aeeed94f00dd302d1fa11d7c6f648f590f58cf8d1c77e992a576028f1c1269
    spec:
      
      
      containers:
      - name: server
        imagePullPolicy: Always
        
        image: audius/discovery-provider:64c597772eb76e206f587e0ce2b0f1d302dcaaa3
        
        envFrom:
        - configMapRef:
            name: discovery-provider-backend-cm
        
        ports:
        - containerPort: 5000
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5000
          initialDelaySeconds: 300
          periodSeconds: 10
          failureThreshold: 5
          timeoutSeconds: 6
        
        
        command: ["sh", "-c", "./scripts/prod-server.sh"]
        
        
      


---
# Source: audius-discovery-provider/templates/cache-deploy.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery-provider-cache
  namespace: default
spec:
  selector:
    matchLabels:
      release: discovery-provider
      tier: cache
  replicas: 1
  template:
    metadata:
      labels:
        release: discovery-provider
        tier: cache
    spec:
      
      containers:
      - name: discovery-provider-cache
        image: redis:5.0.5
        ports:
        - containerPort: 6379
        command: ["redis-server", "--save", "''"]


---
# Source: audius-discovery-provider/templates/db-deploy.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery-provider-db
  namespace: default
spec:
  selector:
    matchLabels:
      release: discovery-provider
      tier: db
  replicas: 1
  
  template:
    metadata:
      labels:
        release: discovery-provider
        tier: db
      annotations:
        checksum/config: fa0013b1ddd94b46f279371d89fb6c758acc5c910e5c83a01526f30f46d9e203
    spec:
      containers:
      - name: postgres
        image: postgres:11.4
        args:
          - -c
          - shared_buffers=256MB
          - -c
          - max_connections=300
          - -c
          - shared_preload_libraries=pg_stat_statements
        envFrom:
        - configMapRef:
            name: discovery-provider-db-cm
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: discovery-provider-db-pv
          mountPath: /var/lib/postgresql/data
          subPath: discovery-provider-db
        - name: dshm
          mountPath: /dev/shm
      volumes:
      - name: discovery-provider-db-pv
        persistentVolumeClaim:
          claimName: discovery-provider-db-pvc
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 1Gi


---
# Source: audius-discovery-provider/templates/ipfs-deploy.yaml


apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery-provider-ipfs
  namespace: default
spec:
  selector:
    matchLabels:
      release: discovery-provider
      tier: ipfs
      
  replicas: 1
  
  template:
    metadata:
      labels:
        release: discovery-provider
        tier: ipfs
        
      annotations:
        checksum/config: 2c3c0976bd0ded5df1835e1e093b20769ec8e20378de4be0ef0a85dc50e15730
    spec:
      
      
      containers:
      - name: discovery-provider-ipfs
        image: ipfs/go-ipfs:v0.9.1
        ports:
        - name: swarm
          containerPort: 4001
        - name: api
          containerPort: 5001
        - name: http
          containerPort: 8080
        volumeMounts:
        - name: discovery-provider-ipfs-pv
          mountPath: /data/ipfs
          subPath: discovery-provider-ipfs
      initContainers:
      - name: init
        image: ipfs/go-ipfs:v0.9.1
        command: ["sh", "/scripts/ipfs-remove-lock.sh"]
        volumeMounts:
        - name: discovery-provider-ipfs-pv
          mountPath: /data/ipfs
          subPath: discovery-provider-ipfs
        - name: ipfs-cm
          mountPath: /scripts/ipfs-remove-lock.sh
          subPath: ipfs-remove-lock.sh
      volumes:
      - name: discovery-provider-ipfs-pv
        
        persistentVolumeClaim:
          claimName: discovery-provider-ipfs-pvc
        
      - name: ipfs-cm
        configMap:
          name: discovery-provider-ipfs-cm



